{"remainingRequest":"/home/runner/work/U3_Investigacion_Innovacion_1/U3_Investigacion_Innovacion_1/node_modules/thread-loader/dist/cjs.js!/home/runner/work/U3_Investigacion_Innovacion_1/U3_Investigacion_Innovacion_1/node_modules/babel-loader/lib/index.js!/home/runner/work/U3_Investigacion_Innovacion_1/U3_Investigacion_Innovacion_1/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/U3_Investigacion_Innovacion_1/U3_Investigacion_Innovacion_1/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U3_Investigacion_Innovacion_1/U3_Investigacion_Innovacion_1/src/components/actividad/Actividad.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/runner/work/U3_Investigacion_Innovacion_1/U3_Investigacion_Innovacion_1/src/components/actividad/Actividad.vue","mtime":1735408843707},{"path":"/home/runner/work/U3_Investigacion_Innovacion_1/U3_Investigacion_Innovacion_1/babel.config.js","mtime":1735408843623},{"path":"/home/runner/work/U3_Investigacion_Innovacion_1/U3_Investigacion_Innovacion_1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Investigacion_Innovacion_1/U3_Investigacion_Innovacion_1/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Investigacion_Innovacion_1/U3_Investigacion_Innovacion_1/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/U3_Investigacion_Innovacion_1/U3_Investigacion_Innovacion_1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Investigacion_Innovacion_1/U3_Investigacion_Innovacion_1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvcnVubmVyL3dvcmsvVTNfSW52ZXN0aWdhY2lvbl9Jbm5vdmFjaW9uXzEvVTNfSW52ZXN0aWdhY2lvbl9Jbm5vdmFjaW9uXzEvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLWluZGV4LmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHNjcmVlbkNoYW5nZVNvdW5kIGZyb20gJ0AvYXNzZXRzL2FjdGl2aWRhZC9hdWRpby9zY3JlZW4tY2hhbmdlLm1wMyc7CmltcG9ydCBzdWNjZXNzU291bmQgZnJvbSAnQC9hc3NldHMvYWN0aXZpZGFkL2F1ZGlvL3N1Y2Nlc3MubXAzJzsKaW1wb3J0IGZhaWxTb3VuZCBmcm9tICdAL2Fzc2V0cy9hY3RpdmlkYWQvYXVkaW8vZmFpbC5tcDMnOwppbXBvcnQgZW5kR2FtZVN1Y2Nlc3NTb3VuZCBmcm9tICdAL2Fzc2V0cy9hY3RpdmlkYWQvYXVkaW8vZW5kLWdhbWUtc3VjY2Vzcy5tcDMnOwppbXBvcnQgZW5kR2FtZUZhaWxTb3VuZCBmcm9tICdAL2Fzc2V0cy9hY3RpdmlkYWQvYXVkaW8vZW5kLWdhbWUtZmFpbC5tcDMnOwppbXBvcnQgQWN0aXZpZGFkUHJlZ3VudGEgZnJvbSAnLi9BY3RpdmlkYWRQcmVndW50YSc7CmltcG9ydCBBY3RpdmlkYWRCYXJyYUF2YW5jZSBmcm9tICcuL0FjdGl2aWRhZEJhcnJhQXZhbmNlJzsKaW1wb3J0IEFjdGl2aWRhZFJlc3VsdGFkb3MgZnJvbSAnLi9BY3RpdmlkYWRSZXN1bHRhZG9zJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdBY3RpdmlkYWQnLAogIGNvbXBvbmVudHM6IHsKICAgIEFjdGl2aWRhZFByZWd1bnRhOiBBY3RpdmlkYWRQcmVndW50YSwKICAgIEFjdGl2aWRhZEJhcnJhQXZhbmNlOiBBY3RpdmlkYWRCYXJyYUF2YW5jZSwKICAgIEFjdGl2aWRhZFJlc3VsdGFkb3M6IEFjdGl2aWRhZFJlc3VsdGFkb3MKICB9LAogIHByb3BzOiB7CiAgICBjdWVzdGlvbmFyaW86IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIG1lemNsYXJSZXNwdWVzdGFzOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaW50ZW50b3M6IDAsCiAgICAgIHByZWd1bnRhU2VsZWN0ZWRJZHg6IDAsCiAgICAgIHJlc3B1ZXN0YUFjdHVhbDoge30sCiAgICAgIHJlc3B1ZXN0YXM6IFtdLAogICAgICBjb250aW51YXJEaXNhYmxlZDogdHJ1ZSwKICAgICAgYXVkaW9FbmFibGVkOiB0cnVlLAogICAgICB0b3RhbFByZWd1bnRhc09yaWdpbmFsZXM6IDAKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgcHJlZ3VudGFzOiBmdW5jdGlvbiBwcmVndW50YXMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgTUFYX1BSRUdVTlRBUyA9IDEwOwogICAgICB2YXIgcHJlZ3VudGFzID0gdGhpcy5jdWVzdGlvbmFyaW8ucHJlZ3VudGFzOwogICAgICBpZiAoIXByZWd1bnRhcykgcmV0dXJuIFtdOwogICAgICB2YXIgcHJlZ3VudGFzQmFyYWphZGFzID0gdGhpcy5zaHVmZmxlKHByZWd1bnRhcyk7CiAgICAgIHZhciBwcmVndW50YXNTZWxlY2Npb25hZGFzID0gcHJlZ3VudGFzQmFyYWphZGFzLmxlbmd0aCA+PSBNQVhfUFJFR1VOVEFTID8gcHJlZ3VudGFzQmFyYWphZGFzLnNsaWNlKDAsIE1BWF9QUkVHVU5UQVMpIDogcHJlZ3VudGFzQmFyYWphZGFzOwogICAgICBjb25zb2xlLmxvZygncHJlZ3VudGFzU2VsZWNjaW9uYWRhcycsIHByZWd1bnRhc1NlbGVjY2lvbmFkYXMsICdwcmVndW50YXNCYXJhamFkYXMnLCBwcmVndW50YXNCYXJhamFkYXMpOwogICAgICByZXR1cm4gcHJlZ3VudGFzU2VsZWNjaW9uYWRhcy5tYXAoZnVuY3Rpb24gKHByZWd1bnRhKSB7CiAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgcHJlZ3VudGEpLCB7fSwgewogICAgICAgICAgb3BjaW9uZXM6IHByZWd1bnRhLmJhcmFqYXJSZXNwdWVzdGFzID8gX3RoaXMuc2h1ZmZsZShwcmVndW50YS5vcGNpb25lcykgOiBwcmVndW50YS5vcGNpb25lcywKICAgICAgICAgIGludGVudG9zOiBfdGhpcy5pbnRlbnRvcwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBwcmVndW50YVNlbGVjdGVkOiBmdW5jdGlvbiBwcmVndW50YVNlbGVjdGVkKCkgewogICAgICByZXR1cm4gdGhpcy5wcmVndW50YXNbdGhpcy5wcmVndW50YVNlbGVjdGVkSWR4XTsKICAgIH0sCiAgICBwb3JjZW50YWplQXByb2JhZGFzOiBmdW5jdGlvbiBwb3JjZW50YWplQXByb2JhZGFzKCkgewogICAgICBpZiAodGhpcy5yZXNwdWVzdGFzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIDA7CiAgICAgIHZhciBhcHJvYmFkYXMgPSB0aGlzLnJlc3B1ZXN0YXMuZmlsdGVyKGZ1bmN0aW9uIChyKSB7CiAgICAgICAgcmV0dXJuIHIuZXNDb3JyZWN0YTsKICAgICAgfSkubGVuZ3RoOwogICAgICByZXR1cm4gTWF0aC5yb3VuZChhcHJvYmFkYXMgLyB0aGlzLnJlc3B1ZXN0YXMubGVuZ3RoICogMTAwKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHNodWZmbGU6IGZ1bmN0aW9uIHNodWZmbGUoYXJyYXkpIHsKICAgICAgZm9yICh2YXIgaSA9IGFycmF5Lmxlbmd0aCAtIDE7IGkgPiAwOyBpLS0pIHsKICAgICAgICB2YXIgaiA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChpICsgMSkpOwogICAgICAgIHZhciBfcmVmID0gW2FycmF5W2pdLCBhcnJheVtpXV07CiAgICAgICAgYXJyYXlbaV0gPSBfcmVmWzBdOwogICAgICAgIGFycmF5W2pdID0gX3JlZlsxXTsKICAgICAgfQoKICAgICAgcmV0dXJuIGFycmF5OwogICAgfSwKCiAgICAvKnNodWZmbGUoYXJyYXkpIHsKICAgICAgbGV0IGN1cnJlbnRJbmRleCA9IGFycmF5Lmxlbmd0aAogICAgICBsZXQgcmFuZG9tSW5kZXgKICAgICAgd2hpbGUgKGN1cnJlbnRJbmRleCA+IDApIHsKICAgICAgICByYW5kb21JbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGN1cnJlbnRJbmRleCkKICAgICAgICBjdXJyZW50SW5kZXgtLQogICAgICAgIDtbYXJyYXlbY3VycmVudEluZGV4XSwgYXJyYXlbcmFuZG9tSW5kZXhdXSA9IFsKICAgICAgICAgIGFycmF5W3JhbmRvbUluZGV4XSwKICAgICAgICAgIGFycmF5W2N1cnJlbnRJbmRleF0sCiAgICAgICAgXQogICAgICB9CiAgICAgIHJldHVybiBhcnJheQogICAgfSwqLwogICAgb25ScmVzcHVlc3RhU2VsZWN0ZWQ6IGZ1bmN0aW9uIG9uUnJlc3B1ZXN0YVNlbGVjdGVkKHJlc3B1ZXN0YUVzQ29ycmVjdGEpIHsKICAgICAgdGhpcy5jb250aW51YXJEaXNhYmxlZCA9IGZhbHNlOwogICAgICB0aGlzLnJlc3B1ZXN0YUFjdHVhbCA9IHsKICAgICAgICBpZDogdGhpcy5wcmVndW50YVNlbGVjdGVkLmlkLAogICAgICAgIGVzQ29ycmVjdGE6IHJlc3B1ZXN0YUVzQ29ycmVjdGEKICAgICAgfTsKCiAgICAgIGlmIChyZXNwdWVzdGFFc0NvcnJlY3RhKSB7CiAgICAgICAgdGhpcy5yZXByb2R1Y2lyU29uaWRvKHN1Y2Nlc3NTb3VuZCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5yZXByb2R1Y2lyU29uaWRvKGZhaWxTb3VuZCk7CiAgICAgIH0KICAgIH0sCiAgICBvbkNvbnRpbnVhcjogZnVuY3Rpb24gb25Db250aW51YXIoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy5jb250aW51YXJEaXNhYmxlZCA9IHRydWU7CgogICAgICBpZiAodGhpcy5yZXNwdWVzdGFBY3R1YWwuaWQpIHsKICAgICAgICB2YXIgaWR4ID0gdGhpcy5yZXNwdWVzdGFzLmZpbmRJbmRleChmdW5jdGlvbiAocikgewogICAgICAgICAgcmV0dXJuIHIuaWQgPT09IF90aGlzMi5wcmVndW50YVNlbGVjdGVkLmlkOwogICAgICAgIH0pOwoKICAgICAgICBpZiAoaWR4ID09PSAtMSkgewogICAgICAgICAgdGhpcy5yZXNwdWVzdGFzLnB1c2godGhpcy5yZXNwdWVzdGFBY3R1YWwpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLnJlc3B1ZXN0YXNbaWR4XSA9IHRoaXMucmVzcHVlc3RhQWN0dWFsOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKHRoaXMucHJlZ3VudGFTZWxlY3RlZElkeCA8IHRoaXMucHJlZ3VudGFzLmxlbmd0aCAtIDEpIHsKICAgICAgICB0aGlzLnByZWd1bnRhU2VsZWN0ZWRJZHggKz0gMTsKICAgICAgICB0aGlzLnJlcHJvZHVjaXJTb25pZG8oc2NyZWVuQ2hhbmdlU291bmQpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuZmluYWxpemFyUHJ1ZWJhKCk7CiAgICAgIH0KICAgIH0sCiAgICBvblJlaW5pY2lhcjogZnVuY3Rpb24gb25SZWluaWNpYXIoKSB7CiAgICAgIHRoaXMucHJlZ3VudGFTZWxlY3RlZElkeCA9IDA7CiAgICAgIHRoaXMucmVzcHVlc3RhcyA9IFtdOwogICAgICB0aGlzLnJlc3B1ZXN0YUFjdHVhbCA9IHt9OwogICAgICB0aGlzLmludGVudG9zICs9IDE7CiAgICAgIHRoaXMuJGVtaXQoJ3JlaW5pY2lhcicpOwogICAgfSwKICAgIHJlcHJvZHVjaXJTb25pZG86IGZ1bmN0aW9uIHJlcHJvZHVjaXJTb25pZG8oYXVkaW9TcmMpIHsKICAgICAgaWYgKHRoaXMuYXVkaW9FbmFibGVkKSB7CiAgICAgICAgdmFyIGF1ZGlvID0gbmV3IEF1ZGlvKGF1ZGlvU3JjKTsKICAgICAgICBhdWRpby5wbGF5KCk7CiAgICAgIH0KICAgIH0sCiAgICBmaW5hbGl6YXJQcnVlYmE6IGZ1bmN0aW9uIGZpbmFsaXphclBydWViYSgpIHsKICAgICAgdmFyIHRvdGFsUHJlZ3VudGFzID0gdGhpcy5wcmVndW50YXMubGVuZ3RoOwogICAgICB2YXIgcmVzcHVlc3Rhc0NvcnJlY3RhcyA9IHRoaXMucmVzcHVlc3Rhcy5maWx0ZXIoZnVuY3Rpb24gKHIpIHsKICAgICAgICByZXR1cm4gci5lc0NvcnJlY3RhOwogICAgICB9KS5sZW5ndGg7CiAgICAgIHZhciBwb3JjZW50YWplQXByb2JhY2lvbiA9IHJlc3B1ZXN0YXNDb3JyZWN0YXMgLyB0b3RhbFByZWd1bnRhcyAqIDEwMDsKCiAgICAgIGlmIChwb3JjZW50YWplQXByb2JhY2lvbiA+PSA3MCkgewogICAgICAgIHRoaXMucmVwcm9kdWNpclNvbmlkbyhlbmRHYW1lU3VjY2Vzc1NvdW5kKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnJlcHJvZHVjaXJTb25pZG8oZW5kR2FtZUZhaWxTb3VuZCk7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["Actividad.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"tarjeta--blanca\">\n    <div class=\"row align-items-center mb-4\">\n      <div class=\"col-auto\">\n        <img src=\"@/assets/componentes/icon-actividad.svg\" alt=\"\" />\n      </div>\n      <div class=\"col \">\n        <h2 class=\"titulo-tercero mb-0\">\n          {{ cuestionario.titulo }}\n        </h2>\n        <p class=\"mb-0\" v-html=\"cuestionario.introduccion\"></p>\n      </div>\n    </div>\n    <div class=\"tarjeta tarjeta--lightest-gray px-4 pb-4 pt-4 px-md-5\">\n      <div\n        v-if=\"respuestas.length !== preguntas.length\"\n        class=\"d-flex justify-content-end mb-2\"\n      >\n        <div class=\"form-check form-switch\">\n          <input\n            id=\"switchCheckAudio\"\n            v-model=\"audioEnabled\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n          />\n          <label class=\"form-check-label\" for=\"switchCheckAudio\">¿Audio?</label>\n        </div>\n      </div>\n      <ActividadResultados\n        v-if=\"respuestas.length === preguntas.length\"\n        :respuestas=\"respuestas\"\n        :mensaje-aprobado=\"cuestionario.mensaje_final_aprobado\"\n        :mensaje-reprobado=\"cuestionario.mensaje_final_reprobado\"\n        :porcentaje-aprobadas=\"porcentajeAprobadas\"\n        :preguntas-count=\"preguntas.length\"\n        :total-preguntas-base=\"cuestionario.preguntas.length\"\n        @reiniciar=\"onReiniciar\"\n      />\n      <ActividadPregunta\n        v-else\n        :pregunta=\"preguntaSelected\"\n        :numero-pregunta=\"preguntaSelectedIdx + 1\"\n        @respuestaSelected=\"onRrespuestaSelected\"\n      />\n    </div>\n    <ActividadBarraAvance\n      :pregunta-index=\"preguntaSelectedIdx\"\n      :preguntas-count=\"preguntas.length\"\n      :respuestas-length=\"respuestas.length\"\n      :continuar-disabled=\"continuarDisabled\"\n      :respuestas=\"respuestas\"\n      class=\"mx-4 mx-md-5\"\n      @continuar=\"onContinuar\"\n      @reiniciar=\"onReiniciar\"\n    />\n  </div>\n</template>\n\n<script>\nimport screenChangeSound from '@/assets/actividad/audio/screen-change.mp3'\nimport successSound from '@/assets/actividad/audio/success.mp3'\nimport failSound from '@/assets/actividad/audio/fail.mp3'\nimport endGameSuccessSound from '@/assets/actividad/audio/end-game-success.mp3'\nimport endGameFailSound from '@/assets/actividad/audio/end-game-fail.mp3'\nimport ActividadPregunta from './ActividadPregunta'\nimport ActividadBarraAvance from './ActividadBarraAvance'\nimport ActividadResultados from './ActividadResultados'\nexport default {\n  name: 'Actividad',\n  components: {\n    ActividadPregunta,\n    ActividadBarraAvance,\n    ActividadResultados,\n  },\n  props: {\n    cuestionario: {\n      type: Object,\n      required: true,\n    },\n    mezclarRespuestas: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data: () => ({\n    intentos: 0,\n    preguntaSelectedIdx: 0,\n    respuestaActual: {},\n    respuestas: [],\n    continuarDisabled: true,\n    audioEnabled: true,\n    totalPreguntasOriginales: 0,\n  }),\n  computed: {\n    preguntas() {\n      const MAX_PREGUNTAS = 10\n      const { preguntas } = this.cuestionario\n      if (!preguntas) return []\n\n      const preguntasBarajadas = this.shuffle(preguntas)\n\n      const preguntasSeleccionadas =\n        preguntasBarajadas.length >= MAX_PREGUNTAS\n          ? preguntasBarajadas.slice(0, MAX_PREGUNTAS)\n          : preguntasBarajadas\n\n      console.log(\n        'preguntasSeleccionadas',\n        preguntasSeleccionadas,\n        'preguntasBarajadas',\n        preguntasBarajadas,\n      )\n\n      return preguntasSeleccionadas.map(pregunta => ({\n        ...pregunta,\n        opciones: pregunta.barajarRespuestas\n          ? this.shuffle(pregunta.opciones)\n          : pregunta.opciones,\n        intentos: this.intentos,\n      }))\n    },\n    preguntaSelected() {\n      return this.preguntas[this.preguntaSelectedIdx]\n    },\n    porcentajeAprobadas() {\n      if (this.respuestas.length === 0) return 0\n      const aprobadas = this.respuestas.filter(r => r.esCorrecta).length\n      return Math.round((aprobadas / this.respuestas.length) * 100)\n    },\n  },\n  methods: {\n    shuffle(array) {\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1))\n        ;[array[i], array[j]] = [array[j], array[i]]\n      }\n      return array\n    },\n    /*shuffle(array) {\n      let currentIndex = array.length\n      let randomIndex\n      while (currentIndex > 0) {\n        randomIndex = Math.floor(Math.random() * currentIndex)\n        currentIndex--\n        ;[array[currentIndex], array[randomIndex]] = [\n          array[randomIndex],\n          array[currentIndex],\n        ]\n      }\n      return array\n    },*/\n    onRrespuestaSelected(respuestaEsCorrecta) {\n      this.continuarDisabled = false\n      this.respuestaActual = {\n        id: this.preguntaSelected.id,\n        esCorrecta: respuestaEsCorrecta,\n      }\n      if (respuestaEsCorrecta) {\n        this.reproducirSonido(successSound)\n      } else {\n        this.reproducirSonido(failSound)\n      }\n    },\n    onContinuar() {\n      this.continuarDisabled = true\n      if (this.respuestaActual.id) {\n        const idx = this.respuestas.findIndex(\n          r => r.id === this.preguntaSelected.id,\n        )\n        if (idx === -1) {\n          this.respuestas.push(this.respuestaActual)\n        } else {\n          this.respuestas[idx] = this.respuestaActual\n        }\n      }\n\n      if (this.preguntaSelectedIdx < this.preguntas.length - 1) {\n        this.preguntaSelectedIdx += 1\n        this.reproducirSonido(screenChangeSound)\n      } else {\n        this.finalizarPrueba()\n      }\n    },\n    onReiniciar() {\n      this.preguntaSelectedIdx = 0\n      this.respuestas = []\n      this.respuestaActual = {}\n      this.intentos += 1\n      this.$emit('reiniciar')\n    },\n    reproducirSonido(audioSrc) {\n      if (this.audioEnabled) {\n        const audio = new Audio(audioSrc)\n        audio.play()\n      }\n    },\n    finalizarPrueba() {\n      const totalPreguntas = this.preguntas.length\n      const respuestasCorrectas = this.respuestas.filter(r => r.esCorrecta)\n        .length\n      const porcentajeAprobacion = (respuestasCorrectas / totalPreguntas) * 100\n\n      if (porcentajeAprobacion >= 70) {\n        this.reproducirSonido(endGameSuccessSound)\n      } else {\n        this.reproducirSonido(endGameFailSound)\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"sass\" scoped>\n.boton--disabled\n  opacity: 0.5\n  pointer-events: none\n\n.tarjeta--lightest-gray\n  border: 3px solid #dce4eb\n</style>\n"],"sourceRoot":"src/components/actividad"}]}